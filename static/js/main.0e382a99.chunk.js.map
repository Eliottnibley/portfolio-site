{"version":3,"sources":["data.js","Navigation/Navigation.js","ExperienceCard/ExperienceCard.js","EducationCard/EducationCard.js","ProjectCard/ProjectCard.js","SkillsCard/Skill.js","SkillsCard/SkillsCard.js","AboutCard/AboutCard.js","App.js","reportWebVitals.js","index.js"],"names":["data","Navigation","props","useState","highlighted","setHighlighted","window","addEventListener","section","getHighlightedSection","about","document","getElementById","experience","projects","skills","education","getBoundingClientRect","y","innerHeight","sectionsArray","sections","map","elem","weight","margin","color","Button","className","fullWidth","size","style","justifyContent","paddingLeft","fontWeight","transition","marginLeft","backgroundColor","onClick","updateScroll","id","name","title","ExperienceCard","expData","responsibilitiesMap","responsibilities","ind","companyName","jobTitle","description","startMonth","startYear","current","endMonth","endYear","city","state","EducationCard","eduData","ProjectCard","prjData","showMore","setShowMore","frontEndMap","frontend","Tooltip","placement","TransitionComponent","Zoom","arrow","src","backEndMap","backend","otherMap","otherTech","height","backgroundImage","image","IconButton","href","siteLink","target","gitLink","Skill","tech","SkillsCard","techMap","slice","AboutCard","aboutData","App","navIsOpen","setNavIsOpen","scrollTo","innerWidth","scrollY","experienceMap","projectMap","educationMap","mobileNavArray","frontEnd","backEnd","libraries","other","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e382a99.chunk.js","sourcesContent":["export const data = {\r\n  'name': 'Eliott Nibley',\r\n\r\n  'title': 'Software Engineer and Web Developer',\r\n\r\n  'about': {\r\n    'companyName': 'Freelance',\r\n    'jobTitle': 'Full Stack Developer',\r\n    'description': 'Build responsive websites front to back for a large variety of clients.',\r\n    'responsibilities': [\r\n      'Listen to clients ideas about styling and functionality of website',\r\n      'Negotiate terms of website development with client',\r\n      'Build front-end of site using latest technologies',\r\n      'Build an associated api for website to pull data from',\r\n      'Setup and fill out database for clients future use',\r\n      'Host website and transfer all credentials to client',\r\n      'Tools used: React, Javascript, HTML, CSS // Node.js, PostgreSQL'\r\n    ],\r\n    'startYear': '2020',\r\n    'startMonth': 'July',\r\n    'current': true,\r\n    'endYear': '',\r\n    'endMonth': '',\r\n    'city': 'Salt Lake City',\r\n    'state': 'UT'\r\n  },\r\n\r\n  'experience': [\r\n    {\r\n      'companyName': 'Freelance',\r\n      'jobTitle': 'Full Stack Developer',\r\n      'description': 'Build responsive websites front to back for a large variety of clients.',\r\n      'responsibilities': [\r\n        'Listen to clients ideas about styling and functionality of website',\r\n        'Negotiate terms of website development with client',\r\n        'Build front-end of site using latest technologies',\r\n        'Build an associated api for website to pull data from',\r\n        'Setup and fill out database for clients future use',\r\n        'Host website and transfer all credentials to client',\r\n        'Tools used: React, Javascript, HTML, CSS // Node.js, PostgreSQL'\r\n      ],\r\n      'startYear': '2020',\r\n      'startMonth': 'July',\r\n      'current': true,\r\n      'endYear': '',\r\n      'endMonth': '',\r\n      'city': 'Salt Lake City',\r\n      'state': 'UT'\r\n    },\r\n    {\r\n      'companyName': 'Freelance',\r\n      'jobTitle': 'Full Stack Developer',\r\n      'description': 'Build responsive websites front to back for a large variety of clients.',\r\n      'responsibilities': [\r\n        'Listen to clients ideas about styling and functionality of website',\r\n        'Negotiate terms of website development with client',\r\n        'Build front-end of site using latest technologies',\r\n        'Build an associated api for website to pull data from',\r\n        'Setup and fill out database for clients future use',\r\n        'Host website and transfer all credentials to client',\r\n        'Tools used: React, Javascript, HTML, CSS // Node.js, PostgreSQL'\r\n      ],\r\n      'startYear': '2020',\r\n      'startMonth': 'July',\r\n      'current': true,\r\n      'endYear': '',\r\n      'endMonth': '',\r\n      'city': 'Salt Lake City',\r\n      'state': 'UT'\r\n    },\r\n    {\r\n      'companyName': '',\r\n      'jobTitle': '',\r\n      'description': '',\r\n      'responsibilities': [\r\n\r\n      ],\r\n      'startYear': '',\r\n      'startMonth': '',\r\n      'current': false,\r\n      'endYear': '',\r\n      'endMonth': '',\r\n      'city': '',\r\n      'state': ''\r\n    }\r\n  ],\r\n\r\n  'projects': [\r\n    {\r\n      'name': 'DataSpeaks.us',\r\n      'description': 'This site features interactive maps and charts with information pertaining to systematic racism.',\r\n      'frontend': ['React', 'Javascript', 'HTML5', 'CSS3'],\r\n      'backend': ['NodeJS', 'PostgreSQL'],\r\n      'otherTech': ['npm', 'DigitalOcean', 'MaterialUI', 'Heroku'],\r\n      'image': 'dataSpeaks.png',\r\n      'siteLink': 'https://dataspeaks.us',\r\n      'gitLink': 'https://github.com/Stories-with-Data/dataspeaks'\r\n    },\r\n    {\r\n      'name': 'DataSpeaks.us',\r\n      'description': 'This site features interactive maps and charts with information pertaining to systematic racism.',\r\n      'frontend': ['React', 'Javascript', 'HTML5', 'CSS3'],\r\n      'backend': ['NodeJS', 'PostgreSQL'],\r\n      'otherTech': ['npm', 'DigitalOcean', 'MaterialUI', 'Heroku'],\r\n      'image': 'dataSpeaks.png',\r\n      'siteLink': 'https://dataspeaks.us',\r\n      'gitLink': 'https://github.com/Stories-with-Data/dataspeaks'\r\n    },\r\n    {\r\n      'name': 'DataSpeaks.us',\r\n      'description': 'This site features interactive maps and charts with information pertaining to systematic racism.',\r\n      'frontend': ['React', 'Javascript', 'HTML5', 'CSS3'],\r\n      'backend': ['NodeJS', 'PostgreSQL'],\r\n      'otherTech': ['npm', 'DigitalOcean', 'MaterialUI', 'Heroku'],\r\n      'image': 'dataSpeaks.png',\r\n      'siteLink': '',\r\n      'gitLink': ''\r\n    },\r\n    {\r\n      'name': 'DataSpeaks.us',\r\n      'description': 'This site features interactive maps and charts with information pertaining to systematic racism.',\r\n      'frontend': ['React', 'Javascript', 'HTML5', 'CSS3'],\r\n      'backend': ['NodeJS', 'PostgreSQL'],\r\n      'otherTech': ['npm', 'DigitalOcean', 'MaterialUI', 'Heroku'],\r\n      'image': 'dataSpeaks.png',\r\n      'siteLink': '',\r\n      'gitLink': ''\r\n    }\r\n  ],\r\n\r\n  'skills': {\r\n    'frontEnd': ['HTML5', 'CSS3', 'Javascript', 'Typescript'],\r\n    'backEnd': ['PostgreSQL', 'NodeJS', 'MySQL'],\r\n    'libraries': ['React', 'Ionic', 'MaterialUI'],\r\n    'other': ['DigitalOcean', 'GitHub', 'Heroku', 'Java', 'npm']\r\n  },\r\n\r\n  'education': [\r\n    {\r\n      'companyName': 'B.S. Computer Science',\r\n      'jobTitle': 'University of Utah',\r\n      'description': 'Computer Science major with a background in Mechanical Engineering and Mathematics',\r\n      'responsibilities': [\r\n        'Extended knowledge in data science and big data, software practices, computer networks, databases and information systems',\r\n        'Further emphasis in control systems with knowledge in applied mathematics and statistics'\r\n      ],\r\n      'endYear': '2024',\r\n      'endMonth': 'May',\r\n      'city': 'Salt Lake City',\r\n      'state': 'UT'\r\n    },\r\n    {\r\n      'companyName': 'Completion Certificate',\r\n      'jobTitle': 'DevMountain',\r\n      'description': 'Completed 13-week full stack web development program',\r\n      'responsibilities': [\r\n        'Immersive web development program including frontend development, server development, and database management'\r\n      ],\r\n      'endYear': '2020',\r\n      'endMonth': 'July',\r\n      'city': 'Lehi',\r\n      'state': 'UT'\r\n    },\r\n    {\r\n      'companyName': 'SolidWorks CAD System',\r\n      'jobTitle': 'DevMountain',\r\n      'description': 'Completed 13-week full stack web development program',\r\n      'responsibilities': [\r\n        'Immersive web development program including frontend development, server development, and database management'\r\n      ],\r\n      'endYear': '2020',\r\n      'endMonth': 'July',\r\n      'city': 'Lehi',\r\n      'state': 'UT'\r\n    }\r\n  ],\r\n\r\n  'contact': {}\r\n}","import './Navigation.css'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useState } from 'react'\r\nimport { data } from '../data'\r\n\r\nconst Navigation = (props) => {\r\n\r\n  const [highlighted, setHighlighted] = useState('')\r\n\r\n  window.addEventListener('scroll', () => {\r\n    const section = getHighlightedSection()\r\n    if (section != highlighted) {\r\n      setHighlighted(section)\r\n    }\r\n  })\r\n\r\n  const getHighlightedSection = () => {\r\n    const about = document.getElementById('about-container')\r\n    const experience = document.getElementById('experience-container')\r\n    const projects = document.getElementById('projects-container')\r\n    const skills = document.getElementById('skills-container')\r\n    const education = document.getElementById('education-container')\r\n    const contact = document.getElementById('contact-container')\r\n\r\n    if (contact.getBoundingClientRect().y < window.innerHeight / 3) {\r\n      return 'contact'\r\n    }\r\n    else if (education.getBoundingClientRect().y < window.innerHeight / 3) {\r\n      return 'education'\r\n    }\r\n    else if (skills.getBoundingClientRect().y < window.innerHeight / 3) {\r\n      return 'skills'\r\n    }\r\n    else if (projects.getBoundingClientRect().y < window.innerHeight / 3) {\r\n      return 'projects'\r\n    }\r\n    else if (experience.getBoundingClientRect().y < window.innerHeight / 3) {\r\n      return 'experience'\r\n    }\r\n    else if (about.getBoundingClientRect().y < window.innerHeight / 3) {\r\n      return 'about'\r\n    }\r\n    else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  // Map buttons from sections array data\r\n  const sectionsArray = props.sections.map((elem) => {\r\n    const weight = highlighted == elem ? '1000' : '500'\r\n    const margin = highlighted == elem ? '20px' : '0px'\r\n    const color = highlighted == elem ? '#0B556320' : '#FFFFFF'\r\n    return (\r\n      <Button\r\n        className='nav-button'\r\n        fullWidth={true}\r\n        size='large'\r\n        key={elem}\r\n        style={{ justifyContent: 'start', paddingLeft: '20px', color: '#0B5563', fontWeight: weight, transition: '250ms', marginLeft: margin, backgroundColor: color }}\r\n        onClick={() => { props.updateScroll(elem) }}\r\n      >\r\n        {elem}\r\n      </Button>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div id='navigation-container'>\r\n      <div className='name-and-title' onClick={() => { props.updateScroll('name') }}>\r\n        <h1>\r\n          {data.name}\r\n        </h1>\r\n        <h2>\r\n          {data.title}\r\n        </h2>\r\n      </div>\r\n      <div className='nav-options'>\r\n        {sectionsArray}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation","import './ExperienceCard.css'\r\n\r\n// this is an expericne card\r\nconst ExperienceCard = ({ expData }) => {\r\n\r\n  const responsibilitiesMap = expData.responsibilities.map((elem, ind) => <li key={ind}>{elem}</li>)\r\n  \r\n  return (\r\n    <div className='experience-card-container'>\r\n      <div className='job-header'>\r\n        <div className='company-name'>\r\n          {expData.companyName}\r\n        </div>\r\n        <div className='job-title'>\r\n          {expData.jobTitle}\r\n        </div>\r\n      </div>\r\n      <div className='mobile-job-title'>\r\n          {expData.jobTitle}\r\n      </div>\r\n      <div className='job-description'>\r\n        {expData.description}\r\n      </div>\r\n      <ul className='job-responsibilities'>\r\n        {responsibilitiesMap}\r\n      </ul>\r\n      <div className='job-footer'>\r\n        {`${expData.startMonth} ${expData.startYear} - ${expData.current ? 'Current' : expData.endMonth + ' ' + expData.endYear} | ${expData.city}, ${expData.state}`}\r\n      </div>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default ExperienceCard","import './EducationCard.css'\r\n\r\n// this is an education card\r\nconst EducationCard = ({ eduData }) => {\r\n\r\n  const responsibilitiesMap = eduData.responsibilities.map((elem, ind) => <li key={ind}>{elem}</li>)\r\n\r\n  return (\r\n    <div className='education-card-container'>\r\n      <div className='job-header'>\r\n        <div className='company-name'>\r\n          {eduData.companyName}\r\n        </div>\r\n        <div className='job-title'>\r\n          {eduData.jobTitle}\r\n        </div>\r\n      </div>\r\n      <div className='mobile-job-title'>\r\n        {eduData.jobTitle}\r\n      </div>\r\n      <div className='job-description'>\r\n        {eduData.description}\r\n      </div>\r\n      <ul className='job-responsibilities'>\r\n        {responsibilitiesMap}\r\n      </ul>\r\n      <div className='job-footer'>\r\n        {`${eduData.endMonth} ${eduData.endYear} | ${eduData.city}, ${eduData.state}`}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EducationCard","import IconButton from '@material-ui/core/IconButton'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { useState } from 'react';\r\nimport './ProjectCard.css'\r\n\r\nconst ProjectCard = ({ prjData }) => {\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const frontEndMap = prjData.frontend.map((elem, ind) => (\r\n    <Tooltip key={ind} title={elem} placement='bottom' TransitionComponent={Zoom} arrow>\r\n      <img src={`./assets/${elem}.png`} />\r\n    </Tooltip>\r\n  ))\r\n\r\n  const backEndMap = prjData.backend.map((elem, ind) => (\r\n    <Tooltip key={ind} title={elem} placement='bottom' TransitionComponent={Zoom} arrow>\r\n      <img src={`./assets/${elem}.png`} />\r\n    </Tooltip>\r\n  ))\r\n\r\n  const otherMap = prjData.otherTech.map((elem, ind) => (\r\n    <Tooltip key={ind} title={elem} placement='bottom' TransitionComponent={Zoom} arrow>\r\n      <img src={`./assets/${elem}.png`} />\r\n    </Tooltip>\r\n  ))\r\n\r\n  return (\r\n    <div className='project-card-container'>\r\n      <div className='project-front' onClick={() => setShowMore(!showMore)} style={{ height: showMore ? '0px' : '100%' }}>\r\n        <div className='project-image-container' style={{ backgroundImage: `url(./assets/${prjData.image})` }}>\r\n        </div>\r\n        <span>\r\n          <div>{prjData.name}</div>\r\n          <IconButton style={{ color: '#0B5563' }}>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n        </span>\r\n        <p>{prjData.description}</p>\r\n      </div>\r\n      <div className='project-more' style={{ height: showMore ? '100%' : '0px' }}>\r\n        <div className='more-header'>\r\n          <div>TECH USED</div>\r\n          <IconButton onClick={() => setShowMore(!showMore)} style={{ color: '#0B5563' }}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h4>Front-end</h4>\r\n        <span>{frontEndMap}</span>\r\n        <h4>Back-end</h4>\r\n        <span>{backEndMap}</span>\r\n        <h4>Other</h4>\r\n        <span>{otherMap}</span>\r\n        <h4>Links</h4>\r\n        <div className='site-links'>\r\n          <Tooltip title='View Site' placement='bottom' TransitionComponent={Zoom} arrow>\r\n            <a href={prjData.siteLink} target='_blank'>\r\n              <IconButton style={{ color: '#0b5563' }}>\r\n                <LinkIcon />\r\n              </IconButton>\r\n            </a>\r\n          </Tooltip>\r\n          <Tooltip title='View Source' placement='bottom' TransitionComponent={Zoom} arrow>\r\n            <a href={prjData.gitLink} target='_blank'>\r\n              <IconButton style={{ color: '#0b5563' }}>\r\n                <GitHubIcon />\r\n              </IconButton>\r\n            </a>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectCard","import './SkillsCard.css'\r\n\r\nconst Skill = ({ tech }) => {\r\n\r\n  return (\r\n    <div className='skill-container'>\r\n      <div className='logo'>\r\n        <img src={`./assets/${tech}.png`} />\r\n      </div>\r\n      <div className='tech-name'>{tech}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skill","import Skill from './Skill'\r\nimport './SkillsCard.css'\r\n\r\nconst SkillsCard = ({ data, section }) => {\r\n\r\n  const techMap = data.map((elem, ind) => <Skill tech={elem} key={ind}/>)\r\n\r\n  return (\r\n    <div className='skills-card-container'>\r\n      <h4>{section}</h4>\r\n      <div className='skills'>\r\n        {techMap}\r\n      </div>\r\n      <div className='skills-splice'>\r\n        {techMap.slice(0, 3)}\r\n      </div>\r\n      <div className='skills-splice'>\r\n        {techMap.slice(3)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillsCard","import './AboutCard.css'\r\n\r\n// this is an about card\r\nconst AboutCard = ({ aboutData }) => {\r\n\r\n  const responsibilitiesMap = aboutData.responsibilities.map((elem, ind) => <li key={ind}>{elem}</li>)\r\n\r\n  return (\r\n    <div className='about-card-container'>\r\n      <div className='profile-image-container'>\r\n\r\n      </div>\r\n      <div className='job-header'>\r\n        <div className='company-name'>\r\n          {aboutData.companyName}\r\n        </div>\r\n        <div className='job-title'>\r\n          {aboutData.jobTitle}\r\n        </div>\r\n      </div>\r\n      <div className='mobile-job-title'>\r\n        {aboutData.jobTitle}\r\n      </div>\r\n      <div className='job-description'>\r\n        {aboutData.description}\r\n      </div>\r\n      <ul className='job-responsibilities'>\r\n        {responsibilitiesMap}\r\n      </ul>\r\n      <div className='job-footer'>\r\n        {`${aboutData.endMonth} ${aboutData.endYear} | ${aboutData.city}, ${aboutData.state}`}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutCard","import { useState } from 'react';\r\nimport './App.css';\r\nimport { data } from './data'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Nav from './Navigation/Navigation'\r\nimport ExpCard from './ExperienceCard/ExperienceCard'\r\nimport EduCard from './EducationCard/EducationCard'\r\nimport PrjCard from './ProjectCard/ProjectCard'\r\nimport SklCard from './SkillsCard/SkillsCard'\r\nimport Button from '@material-ui/core/Button'\r\nimport AboutCard from './AboutCard/AboutCard'\r\n\r\nfunction App() {\r\n  const sections = ['about', 'experience', 'projects', 'skills', 'education', 'contact', 'resume']\r\n  const [navIsOpen, setNavIsOpen] = useState(false)\r\n\r\n  const updateScroll = (section) => {\r\n    if (section === 'resume') {\r\n      return\r\n    }\r\n    if (section === 'name') {\r\n      window.scrollTo(0, 0)\r\n      return\r\n    }\r\n    window.scrollTo(0, (window.innerWidth <= 800 ? -59 : 0) + window.scrollY + document.getElementById(`${section}-container`).getBoundingClientRect().y)\r\n  }\r\n\r\n\r\n\r\n  // Create experience card components from projects array in data file\r\n  const experienceMap = data.experience.map((elem, ind) => <ExpCard key={ind} expData={elem} />)\r\n\r\n  // Create project card components from projects array in data file\r\n  const projectMap = data.projects.map((elem, ind) => <PrjCard key={ind} prjData={elem} />)\r\n\r\n  // Create experience card components from projects array in data file\r\n  const educationMap = data.education.map((elem, ind) => <EduCard key={ind} eduData={elem} />)\r\n\r\n  // mapping sections used for mobile navigation tab\r\n  const mobileNavArray = sections.map((elem) => {\r\n    return (\r\n      <Button\r\n        className='mobile-nav-button'\r\n        fullWidth={true}\r\n        size='large'\r\n        key={elem}\r\n        style={{ justifyContent: 'start', paddingLeft: '20px', color: '#0B5563' }}\r\n        onClick={() => {\r\n          updateScroll(elem)\r\n          setNavIsOpen(false)\r\n        }}\r\n      >\r\n        {elem}\r\n      </Button>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div id='mobile-header'>\r\n        <div id='mobile-menu-button'>\r\n          <IconButton onClick={() => setNavIsOpen(!navIsOpen)} style={{ color: '#0B5563' }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h1>{data.name}</h1>\r\n        <h2>{data.title}</h2>\r\n      </div>\r\n      <div id={`mobile-nav-container-${navIsOpen}`}>\r\n        {mobileNavArray}\r\n      </div>\r\n      <Nav sections={sections} updateScroll={updateScroll} />\r\n      <div id='contents-container'>\r\n        <section id='photo-container'>\r\n\r\n        </section>\r\n        <section id='about-container'>\r\n          <h3 className='section-header'>\r\n            About\r\n          </h3>\r\n          <div id='about-content'>\r\n            <AboutCard aboutData={data.about} />\r\n          </div>\r\n        </section>\r\n        <section id='experience-container'>\r\n          <h3 className='section-header'>\r\n            Experience\r\n          </h3>\r\n          <div id='exerience-content'>\r\n            {experienceMap}\r\n          </div>\r\n        </section>\r\n        <section id='projects-container'>\r\n          <h3 className='section-header'>\r\n            Projects\r\n          </h3>\r\n          <div id='projects-content'>\r\n            {projectMap}\r\n          </div>\r\n        </section>\r\n        <section id='skills-container'>\r\n          <h3 className='section-header'>\r\n            Skills\r\n          </h3>\r\n          <div id='skills-content'>\r\n            <SklCard section='Front-End' data={data.skills.frontEnd} />\r\n            <SklCard section='Back-End' data={data.skills.backEnd} />\r\n            <SklCard section='Libraries/Frameworks' data={data.skills.libraries} />\r\n            <SklCard section='Other' data={data.skills.other} />\r\n          </div>\r\n        </section>\r\n        <section id='education-container'>\r\n          <h3 className='section-header'>\r\n            Education\r\n          </h3>\r\n          <div id='education-content'>\r\n            {educationMap}\r\n          </div>\r\n        </section>\r\n        <section id='contact-container' style={{ 'minHeight': '100vh', 'width': '100%' }}>\r\n          <h3 className='section-header'>\r\n            Contact\r\n          </h3>\r\n          <div id='contact-content'>\r\n\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}